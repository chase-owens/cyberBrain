{"version":3,"sources":["images/o.png","images/x.png","images/BaileyGillaspyFigure5.jpg","images/birdbrain_1024X768.jpg","images/birdbrain9.jpg","images/chicken.png","styles/theme/theme.js","components/Nav/Nav.js","components/Card/TTCCard.js","components/Difficulty/Difficulty.js","components/ScoreBoard/ScoreBoard.js","components/WinMessage/WinMessage.js","components/TicTacToeBoard/TicTacToe.js","components/Inspiration/Inspiration.js","App.js","serviceWorker.js","index.js","images/birdbrain.jpg","images/birdbrain3.jpg","images/birdbrainSkinner.jpg"],"names":["module","exports","__webpack_require__","p","theme","createMuiTheme","palette","primary","main","light","dark","contrastText","secondary","error","text","typography","fontFamily","join","Nav","react_default","a","createElement","AppBar_default","style","background","borderTop","concat","className","Grid_default","container","justify","item","Typography_default","color","variant","react_router_dom","textDecoration","to","Button_default","TTCCard","_ref","card","value","handleCardClick","react_card_flip_default","isFlipped","flipDirection","width","height","backgroundColor","Card_default","key","onClick","mark","marginLeft","marginTop","src","x","alt","o","Difficulty","difficulty","changeDifficulty","FormControl_default","InputLabel_default","htmlFor","Select_default","id","onChange","MenuItem_default","ScoreBoard","player1Wins","computerWins","TextField_default","label","margin","WinMessage","winMessage","open","handleCloseWinMessage","winner","Snackbar_default","anchorOrigin","vertical","horizontal","onClose","autoHideDuration","message","action","IconButton_default","aria-label","class","TicTacToe","state","cardArray","player1","win","someoneHasWon","whoHasWon","e","_this","play","evt","reason","setTimeout","setState","getComputerMove","getOpenSpaces","length","easyPlay","difficultPlay","impossiblePlay","getRandomNumber","resetGame","checkTheseThreeForAWin","moves","firstTwoIndiciesLineUp","checkIfOnSameLine","checkForWin","player1Moves","getMovesPlayed","prevState","props","gameOver","console","log","index","splice","target","determineWhereOnBoardFromIndex","findFirstMove","indexPlayed","forEach","move","i","spot","otherMove","checkIfOtherSpotOnTheLineIsOpen","indexOfInterest","some","computerMoves","map","push","checkRiskLosing","allMoves","blockingMove","player1MovesSorted","sort","areOnALine","checkIfCanWin","winningMove","computerMovesSorted","filter","number","num","max","Math","floor","random","selectRandomPlaceToPlay","arrayOfOpenPlacesToPlay","playRandomSquare","combatCommonTactics","counterMove","susceptibleToTriangleTactic","susceptibleToEncirclementTactic","susceptibleToArrowheadTactic","wherePlayer1Is","onCorner","onCenter","getFreeCorners","every","player1MovesSum","cornerPlayer1IsOn","cornersLeft","corner","cornersComputerIsOn","existingCorner","cornerTaken","block","prevProps","this","_this2","paddingTop","paddingBottom","components_Difficulty_Difficulty","border","spacing","Card_TTCCard","section","components_ScoreBoard_ScoreBoard","components_WinMessage_WinMessage","Component","Inspiration","baileyGillaspy","birdBrain5x7","birdBrain1","birdBrain2","birdSkinner","birdBrain3","Paper_default","maxHeight","href","App","styles","backgroundImage","chicken","backgroundPosition","backgroundRepeat","components_Nav_Nav","react_router","exact","path","render","TicTacToeBoard_TicTacToe","components_Inspiration_Inspiration","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2e71a601.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/o.c9849407.png\";","module.exports = __webpack_public_path__ + \"static/media/x.38341b85.png\";","module.exports = __webpack_public_path__ + \"static/media/BaileyGillaspyFigure5.34a47fa6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/birdbrain_1024X768.2751157b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/birdbrain9.66477714.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chicken.b89543da.png\";","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#FFFF00',\n      light: '#FFED04',\n      dark: '#C9AF12',\n      contrastText: '#000'\n    },\n    secondary: {\n      main: '#F50057',\n      light: '#FF4081',\n      dark: '#C51162',\n      contrastText: '#000'\n    },\n    error: {\n      main: '#F44336',\n      light: '#E57373',\n      dark: '#D32F2F',\n      contrastText: '#fff'\n    },\n    text: {\n      main: '#000',\n      light: '#fff',\n      dark: '#00f',\n      contrastText: '#FF1493'\n    },\n    typography: {\n      fontFamily: [\n        '-apple-system',\n        'BlinkMacSystemFont',\n        '\"Segoe UI\"',\n        'Roboto',\n        '\"Helvetica Neue\"',\n        'Arial',\n        'sans-serif',\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"'\n      ].join(',')\n    }\n  }\n});\n\nexport { theme };\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport { theme } from '../../styles/theme/theme';\nimport { Link } from 'react-router-dom';\n\nconst Nav = () => {\n  return (\n    <AppBar\n      style={{\n        background: theme.palette.primary.main,\n        borderTop: `8px solid ${theme.palette.primary.dark}`\n      }}\n      className='Nav'\n    >\n      <Grid container justify='space-between'>\n        <Grid item>\n          <div className='TextWrap'>\n            <Typography\n              style={{ color: theme.palette.primary.contrastText }}\n              variant='display1'\n              className='TitleText'\n            >\n              # Cyber Brain\n            </Typography>\n          </div>\n        </Grid>\n        <Grid item>\n          <Grid container justify='space-between'>\n            <Grid item>\n              <div className='NavButton'>\n                <Link style={{ textDecoration: 'none' }} to='/'>\n                  <Button\n                    style={{\n                      color: theme.palette.primary.contrastText\n                    }}\n                  >\n                    Game\n                  </Button>\n                </Link>\n              </div>\n            </Grid>\n            <Grid item>\n              <div className='NavButton'>\n                <Link style={{ textDecoration: 'none' }} to='/inspiration'>\n                  <Button style={{ color: theme.palette.primary.contrastText }}>\n                    Inspiration\n                  </Button>\n                </Link>\n              </div>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </AppBar>\n  );\n};\n\nexport default Nav;\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport ReactCardFlip from 'react-card-flip';\nimport o from '../../images/o.png';\nimport x from '../../images/x.png';\nimport { theme } from '../../styles/theme/theme';\n\nconst TTCCard = ({ card, value, handleCardClick }) => {\n  return (\n    <ReactCardFlip\n      isFlipped={card.isFlipped}\n      flipDirection='horizontal'\n      style={{\n        width: '100%',\n        height: '100%',\n        backgroundColor: theme.palette.secondary.main\n      }}\n    >\n      <Card\n        style={{\n          width: '100%',\n          height: '100%',\n          backgroundColor: theme.palette.secondary.main\n        }}\n        className='Card'\n        key='front'\n        onClick={() => handleCardClick(value)}\n      />\n      <Card\n        style={{\n          width: '100%',\n          height: '100%',\n          backgroundColor: theme.palette.secondary.main\n        }}\n        className='Card'\n        key='back'\n      >\n        {card.mark === 'x' && (\n          <img\n            style={{\n              width: '60%',\n              height: '60%',\n              marginLeft: '20%',\n              marginTop: '15%'\n            }}\n            src={x}\n            alt='x'\n          />\n        )}\n        {card.mark === 'o' && (\n          <img\n            style={{\n              width: '60%',\n              height: '60%',\n              marginLeft: '20%',\n              marginTop: '15%'\n            }}\n            src={o}\n            alt='o'\n          />\n        )}\n      </Card>\n    </ReactCardFlip>\n  );\n};\n\nexport default TTCCard;\n","import React from 'react';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { theme } from '../../styles/theme/theme';\n\nconst Difficulty = ({ difficulty, changeDifficulty }) => {\n  return (\n    <section style={{ width: 170 }}>\n      <FormControl>\n        <InputLabel\n          style={{ color: theme.palette.text.main }}\n          htmlFor='difficulty'\n        >\n          Difficulty\n        </InputLabel>\n        <Select\n          style={{ width: 200 }}\n          id='difficulty'\n          value={difficulty}\n          onChange={changeDifficulty}\n        >\n          <MenuItem value='easy'>Easy</MenuItem>\n          <MenuItem value='difficult'>Difficult</MenuItem>\n          <MenuItem value='impossible'>Tie or Lose</MenuItem>\n        </Select>\n      </FormControl>\n    </section>\n  );\n};\n\nexport default Difficulty;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\n\nconst ScoreBoard = ({ player1Wins, computerWins }) => {\n  return (\n    <Grid container justify='space-between' style={{ width: '100%' }}>\n      <Grid item>\n        <TextField\n          id='user-score'\n          label='User Wins'\n          value={player1Wins}\n          margin='normal'\n          variant='outlined'\n          style={{ width: 150, height: 70 }}\n        />\n      </Grid>\n      <Grid item>\n        <TextField\n          id='computer-score'\n          label='Robo Wins'\n          value={computerWins}\n          margin='normal'\n          variant='outlined'\n          style={{ width: 150, height: 70 }}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ScoreBoard;\n","import React from 'react';\nimport SnackBar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport { theme } from '../../styles/theme/theme';\n\nconst WinMessage = ({ open, handleCloseWinMessage, winner }) => {\n  let winMessage;\n  winner === null && (winMessage = \"Kiss your cousin, it's a tie\");\n  winner !== null &&\n    (winner ? (winMessage = 'You Win!!') : (winMessage = 'Computer Wins!!'));\n\n  return (\n    <SnackBar\n      anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n      open={open}\n      onClose={handleCloseWinMessage}\n      autoHideDuration={5500}\n      message={\n        <span style={{ color: theme.palette.text.light }} id='win-message-id'>\n          {winMessage}\n        </span>\n      }\n      action={[\n        <IconButton\n          key='close'\n          aria-label='Close'\n          onClick={handleCloseWinMessage}\n        >\n          <i style={{ color: theme.palette.error.main }} class='material-icons'>\n            close\n          </i>\n        </IconButton>\n      ]}\n    />\n  );\n};\n\nexport default WinMessage;\n","import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TTCCard from '../Card/TTCCard';\nimport Difficulty from '../Difficulty/Difficulty';\nimport ScoreBoard from '../ScoreBoard/ScoreBoard';\nimport { theme } from '../../styles/theme/theme';\nimport WinMessage from '../WinMessage/WinMessage';\n\nclass TicTacToe extends Component {\n  state = {\n    cardArray: [\n      { isFlipped: false, mark: '' },\n      { isFlipped: false, mark: '' },\n      { isFlipped: false, mark: '' },\n      { isFlipped: false, mark: '' },\n      { isFlipped: false, mark: '' },\n      { isFlipped: false, mark: '' },\n      { isFlipped: false, mark: '' },\n      { isFlipped: false, mark: '' },\n      { isFlipped: false, mark: '' }\n    ],\n    player1: true,\n    difficulty: 'easy',\n    win: { someoneHasWon: false, whoHasWon: null },\n    player1Wins: 0,\n    computerWins: 0,\n    open: false\n  };\n\n  componentDidMount() {}\n\n  componentDidUpdate(prevProps, prevState) {\n    this.state.win !== prevState.win &&\n      this.state.win.someoneHasWon !== false &&\n      this.setState({ open: true });\n\n    this.state.cardArray !== prevState.cardArray &&\n      console.log('Should check for win');\n\n    this.state.player1 !== prevState.player1 &&\n      this.state.player1 === false &&\n      this.getComputerMove();\n  }\n\n  render() {\n    return (\n      <section>\n        <Grid\n          style={{\n            paddingTop: 40,\n            paddingBottom: 10,\n            width: 363,\n            margin: 'auto'\n          }}\n          container\n          justify='space-between'\n        >\n          <Grid item>\n            <Difficulty\n              changeDifficulty={this.changeDifficulty}\n              difficulty={this.state.difficulty}\n            />\n          </Grid>\n          <Grid item>\n            <Button\n              onClick={this.resetGame}\n              style={{\n                marginTop: 8,\n                backgroundColor: theme.palette.text.light,\n                border: 'thin solid black'\n              }}\n            >\n              New Game\n            </Button>\n          </Grid>\n        </Grid>\n        <Grid\n          style={{\n            width: 363,\n            height: 363,\n            margin: 'auto'\n          }}\n          container\n          justify='space-between'\n          spacing={8}\n        >\n          {this.state.cardArray.map((card, i) => (\n            <Grid key={i} item style={{ width: '30.3%' }}>\n              <TTCCard\n                value={i}\n                card={card}\n                handleCardClick={this.handleCardClick}\n              />\n            </Grid>\n          ))}\n        </Grid>\n        <Grid\n          style={{\n            width: 363,\n            margin: 'auto'\n          }}\n          section\n        >\n          <ScoreBoard\n            player1Wins={this.state.player1Wins}\n            computerWins={this.state.computerWins}\n          />\n        </Grid>\n        <WinMessage\n          open={this.state.open}\n          handleCloseWinMessage={this.handleCloseWinMessage}\n          winner={this.state.win.whoHasWon}\n        />\n      </section>\n    );\n  }\n\n  handleCardClick = e => {\n    let player1 = this.state.player1;\n    let win = this.state.win.someoneHasWon;\n    if (player1 && !win) {\n      this.play(e);\n    }\n  };\n\n  handleCloseWinMessage = (evt, reason) => {\n    setTimeout(() => {\n      this.setState({ open: false });\n    }, 400);\n  };\n\n  getComputerMove = () => {\n    if (\n      this.state.win.someoneHasWon === false &&\n      this.getOpenSpaces().length > 0\n    ) {\n      setTimeout(() => {\n        if (this.state.player1 === false) {\n          switch (this.state.difficulty) {\n            case 'easy':\n              this.easyPlay();\n              break;\n            case 'difficult':\n              this.difficultPlay();\n              break;\n            default:\n              this.impossiblePlay();\n              break;\n          }\n        }\n      }, this.getRandomNumber(4) * 100);\n    }\n  };\n\n  resetGame = () => {\n    let cardArray = [\n      { isFlipped: false, mark: '' },\n      { isFlipped: false, mark: '' },\n      { isFlipped: false, mark: '' },\n      { isFlipped: false, mark: '' },\n      { isFlipped: false, mark: '' },\n      { isFlipped: false, mark: '' },\n      { isFlipped: false, mark: '' },\n      { isFlipped: false, mark: '' },\n      { isFlipped: false, mark: '' }\n    ];\n    this.setState({\n      cardArray,\n      player1: true,\n      win: { someoneHasWon: false, whoHasWon: null }\n    });\n  };\n\n  // -> T/F\n  checkTheseThreeForAWin = moves => {\n    let win = false;\n    let firstTwoIndiciesLineUp = this.checkIfOnSameLine(moves[0], moves[1]);\n    if (\n      firstTwoIndiciesLineUp !== null &&\n      firstTwoIndiciesLineUp === moves[2]\n    ) {\n      win = true;\n    }\n    return win;\n  };\n\n  // -> T/F - SetState win, player1\n  checkForWin = () => {\n    let moves = this.getMovesPlayed();\n    let player1Moves = moves[0];\n    let win = false;\n\n    switch (player1Moves.length) {\n      case 3:\n        win = this.checkTheseThreeForAWin(player1Moves);\n        win &&\n          this.setState((prevState, props) => ({\n            win: { someoneHasWon: true, whoHasWon: true },\n            player1Wins: prevState.player1Wins + 1\n          }));\n        break;\n      case 4:\n        win = this.checkTheseThreeForAWin([\n          player1Moves[0],\n          player1Moves[1],\n          player1Moves[2]\n        ]);\n        !win &&\n          (win = this.checkTheseThreeForAWin([\n            player1Moves[1],\n            player1Moves[2],\n            player1Moves[3]\n          ]));\n        !win &&\n          (win = this.checkTheseThreeForAWin([\n            player1Moves[0],\n            player1Moves[1],\n            player1Moves[3]\n          ]));\n        !win &&\n          (win = this.checkTheseThreeForAWin([\n            player1Moves[0],\n            player1Moves[2],\n            player1Moves[3]\n          ]));\n        win &&\n          this.setState((prevState, props) => ({\n            win: { someoneHasWon: true, whoHasWon: true },\n            player1Wins: prevState.player1Wins + 1\n          }));\n        break;\n      case 5:\n        win = this.checkTheseThreeForAWin([\n          player1Moves[0],\n          player1Moves[1],\n          player1Moves[2]\n        ]);\n        !win &&\n          (win = this.checkTheseThreeForAWin([\n            player1Moves[1],\n            player1Moves[2],\n            player1Moves[3]\n          ]));\n        !win &&\n          (win = this.checkTheseThreeForAWin([\n            player1Moves[0],\n            player1Moves[1],\n            player1Moves[3]\n          ]));\n        !win &&\n          (win = this.checkTheseThreeForAWin([\n            player1Moves[0],\n            player1Moves[2],\n            player1Moves[3]\n          ]));\n        !win &&\n          (win = this.checkTheseThreeForAWin([\n            player1Moves[0],\n            player1Moves[1],\n            player1Moves[4]\n          ]));\n        !win &&\n          (win = this.checkTheseThreeForAWin([\n            player1Moves[0],\n            player1Moves[2],\n            player1Moves[4]\n          ]));\n        !win &&\n          (win = this.checkTheseThreeForAWin([\n            player1Moves[0],\n            player1Moves[3],\n            player1Moves[4]\n          ]));\n        !win &&\n          (win = this.checkTheseThreeForAWin([\n            player1Moves[1],\n            player1Moves[2],\n            player1Moves[4]\n          ]));\n        !win &&\n          (win = this.checkTheseThreeForAWin([\n            player1Moves[1],\n            player1Moves[3],\n            player1Moves[4]\n          ]));\n        !win &&\n          (win = this.checkTheseThreeForAWin([\n            player1Moves[2],\n            player1Moves[3],\n            player1Moves[4]\n          ]));\n        win &&\n          this.setState((prevState, props) => ({\n            win: { someoneHasWon: true, whoHasWon: true },\n            player1Wins: prevState.player1Wins + 1\n          }));\n        break;\n      default:\n        break;\n    }\n\n    const gameOver = this.getOpenSpaces().length;\n    console.log('Win: ', win, 'CardsLeft: ', gameOver);\n\n    !win &&\n      gameOver === 0 &&\n      this.setState({ win: { someoneHasWon: null, whoHasWon: null } });\n\n    !win &&\n      gameOver !== 0 &&\n      this.setState((prevState, props) => ({\n        player1: !prevState.player1\n      }));\n\n    if (win || gameOver === 0) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  play = index => {\n    let cardArray = this.state.cardArray;\n    const mark = this.state.player1 ? 'x' : 'o';\n    let card = { isFlipped: true, mark: mark };\n    cardArray.splice(index, 1, card);\n    this.setState({ cardArray }, () => this.checkForWin());\n  };\n\n  changeDifficulty = evt => {\n    let difficulty = evt.target.value;\n    this.setState({ difficulty });\n  };\n\n  determineWhereOnBoardFromIndex = index => {\n    if (index === 4) {\n      return 'center';\n    } else if (index % 2 === 1) {\n      return 'side';\n    } else {\n      return 'corner';\n    }\n  };\n\n  // Finds first move -> [indexOfFirstMove, spot: 'corner', 'side', 'center']\n  findFirstMove = () => {\n    let indexPlayed = null;\n    this.state.cardArray.forEach((move, i) => {\n      if (move.mark === 'x') {\n        indexPlayed = i;\n      }\n      return indexPlayed;\n    });\n    let spot = this.determineWhereOnBoardFromIndex(indexPlayed);\n    return [indexPlayed, spot];\n  };\n\n  // Check if on same line -> null/other index on line\n  checkIfOnSameLine = (move, otherMove) => {\n    switch (move) {\n      case 0:\n        if (\n          otherMove === 1 ||\n          otherMove === 2 ||\n          otherMove === 3 ||\n          otherMove === 4 ||\n          otherMove === 6 ||\n          otherMove === 8\n        ) {\n          switch (otherMove) {\n            case 1:\n              return 2;\n            case 2:\n              return 1;\n            case 3:\n              return 6;\n            case 4:\n              return 8;\n            case 6:\n              return 3;\n            case 8:\n              return 4;\n            default:\n              break;\n          }\n        }\n        break;\n      case 1:\n        if (\n          otherMove === 0 ||\n          otherMove === 2 ||\n          otherMove === 4 ||\n          otherMove === 7\n        ) {\n          switch (otherMove) {\n            case 0:\n              return 2;\n            case 2:\n              return 0;\n            case 4:\n              return 7;\n            case 7:\n              return 4;\n            default:\n              break;\n          }\n        }\n        break;\n      case 2:\n        if (\n          otherMove === 0 ||\n          otherMove === 1 ||\n          otherMove === 4 ||\n          otherMove === 5 ||\n          otherMove === 6 ||\n          otherMove === 8\n        ) {\n          switch (otherMove) {\n            case 0:\n              return 1;\n            case 1:\n              return 0;\n            case 4:\n              return 6;\n            case 5:\n              return 8;\n            case 6:\n              return 4;\n            case 8:\n              return 5;\n            default:\n              break;\n          }\n        }\n        break;\n      case 3:\n        if (\n          otherMove === 0 ||\n          otherMove === 4 ||\n          otherMove === 5 ||\n          otherMove === 6\n        ) {\n          switch (otherMove) {\n            case 0:\n              return 6;\n            case 4:\n              return 5;\n            case 5:\n              return 4;\n            case 6:\n              return 0;\n            default:\n              break;\n          }\n        }\n        break;\n      case 4:\n        if (\n          otherMove === 0 ||\n          otherMove === 1 ||\n          otherMove === 2 ||\n          otherMove === 3 ||\n          otherMove === 5 ||\n          otherMove === 6 ||\n          otherMove === 7 ||\n          otherMove === 8\n        ) {\n          switch (otherMove) {\n            case 0:\n              return 8;\n            case 1:\n              return 7;\n            case 2:\n              return 6;\n            case 3:\n              return 5;\n            case 5:\n              return 3;\n            case 6:\n              return 2;\n            case 7:\n              return 1;\n            case 8:\n              return 0;\n            default:\n              break;\n          }\n        }\n        break;\n      case 5:\n        if (\n          otherMove === 2 ||\n          otherMove === 3 ||\n          otherMove === 4 ||\n          otherMove === 8\n        ) {\n          switch (otherMove) {\n            case 2:\n              return 8;\n            case 3:\n              return 4;\n            case 4:\n              return 3;\n            case 8:\n              return 2;\n            default:\n              break;\n          }\n        }\n        break;\n      case 6:\n        if (\n          otherMove === 0 ||\n          otherMove === 2 ||\n          otherMove === 3 ||\n          otherMove === 4 ||\n          otherMove === 7 ||\n          otherMove === 8\n        ) {\n          switch (otherMove) {\n            case 0:\n              return 3;\n            case 2:\n              return 4;\n            case 3:\n              return 0;\n            case 4:\n              return 2;\n            case 7:\n              return 8;\n            case 8:\n              return 7;\n            default:\n              break;\n          }\n        }\n        break;\n      case 7:\n        if (\n          otherMove === 1 ||\n          otherMove === 4 ||\n          otherMove === 6 ||\n          otherMove === 8\n        ) {\n          switch (otherMove) {\n            case 1:\n              return 4;\n            case 4:\n              return 1;\n            case 6:\n              return 8;\n            case 8:\n              return 6;\n            default:\n              break;\n          }\n        }\n        break;\n      case 8:\n        if (\n          otherMove === 0 ||\n          otherMove === 2 ||\n          otherMove === 4 ||\n          otherMove === 5 ||\n          otherMove === 6 ||\n          otherMove === 7\n        ) {\n          switch (otherMove) {\n            case 0:\n              return 4;\n            case 2:\n              return 5;\n            case 4:\n              return 0;\n            case 5:\n              return 2;\n            case 6:\n              return 7;\n            case 7:\n              return 6;\n            default:\n              break;\n          }\n        }\n        break;\n      default:\n        return null;\n    }\n    return null;\n  };\n\n  // Check if spot on line is open -> t/f\n  checkIfOtherSpotOnTheLineIsOpen = (indexOfInterest, moves) => {\n    return !moves.some(move => move === indexOfInterest);\n  };\n\n  // Get indicies played -> [player1, computer]\n  getMovesPlayed = () => {\n    let player1Moves = null;\n    let computerMoves = null;\n    this.state.cardArray.map((move, i) => {\n      if (move.mark === 'x' && player1Moves !== null) {\n        player1Moves.push(i);\n      } else if (move.mark === 'x') {\n        player1Moves = [i];\n      }\n      if (move.mark === 'o' && computerMoves !== null) {\n        computerMoves.push(i);\n      } else if (move.mark === 'o') {\n        computerMoves = [i];\n      }\n      return null;\n    });\n    return [player1Moves, computerMoves];\n  };\n\n  // Check if risk losing -> null/index to block win\n  checkRiskLosing = () => {\n    let allMoves = this.getMovesPlayed();\n    let player1Moves = allMoves[0];\n    let computerMoves = allMoves[1];\n    let blockingMove = null;\n\n    if (computerMoves !== null) {\n      let player1MovesSorted = player1Moves.sort();\n\n      player1MovesSorted.forEach((move, i) => {\n        player1MovesSorted.forEach(otherMove => {\n          if (otherMove > move) {\n            let areOnALine = this.checkIfOnSameLine(move, otherMove);\n            if (areOnALine !== null) {\n              if (\n                this.checkIfOtherSpotOnTheLineIsOpen(areOnALine, computerMoves)\n              ) {\n                blockingMove = areOnALine;\n              }\n            }\n          }\n        });\n      });\n    }\n    return blockingMove;\n  };\n\n  // Check if going to win -> null/index to win\n  checkIfCanWin = () => {\n    let allMoves = this.getMovesPlayed();\n    let player1Moves = allMoves[0];\n    let computerMoves = allMoves[1];\n    let winningMove = null;\n\n    if (computerMoves !== null) {\n      let computerMovesSorted = computerMoves.sort();\n      computerMovesSorted.forEach((move, i) => {\n        computerMovesSorted.forEach(otherMove => {\n          if (otherMove > move) {\n            let areOnALine = this.checkIfOnSameLine(move, otherMove);\n            if (areOnALine !== null) {\n              if (\n                this.checkIfOtherSpotOnTheLineIsOpen(areOnALine, player1Moves)\n              ) {\n                winningMove = areOnALine;\n              }\n            }\n          }\n        });\n      });\n    }\n    return winningMove;\n  };\n\n  // Get all open spaces -> []\n  getOpenSpaces = () => {\n    const possibleSpaces = [0, 1, 2, 3, 4, 5, 6, 7, 8];\n    let openSpaces;\n    let allMoves = this.getMovesPlayed();\n    if (allMoves[0] === null && allMoves[1] === null) {\n      allMoves = null;\n    } else if (allMoves[0] === null && allMoves[1] !== null) {\n      allMoves = allMoves[1];\n    } else if (allMoves[0] !== null && allMoves[1] === null) {\n      allMoves = allMoves[0];\n    } else {\n      allMoves = allMoves[0].concat(allMoves[1]);\n    }\n    openSpaces = possibleSpaces.filter(\n      number => !allMoves.some(num => num === number)\n    );\n\n    return openSpaces;\n  };\n\n  // Get random number up to n(th) index\n  // Can be anything from 0 to max - 1\n  getRandomNumber = max => {\n    return Math.floor(Math.random() * Math.floor(max));\n  };\n\n  // Get random value from an array\n  selectRandomPlaceToPlay = arrayOfOpenPlacesToPlay => {\n    return arrayOfOpenPlacesToPlay[\n      this.getRandomNumber(arrayOfOpenPlacesToPlay.length)\n    ];\n  };\n\n  // Returns nothing\n  // Plays a random play\n  playRandomSquare = () => {\n    let num = this.selectRandomPlaceToPlay(this.getOpenSpaces());\n    this.play(num);\n  };\n\n  // investigates wether a common tactic is being deployed\n  // -> null if no tactic discovered || num to counter if tactic is discovered\n  combatCommonTactics = () => {\n    let moves = this.getMovesPlayed();\n    let counterMove;\n    let player1Moves = moves[0];\n    let computerMoves = moves[1];\n    counterMove = this.susceptibleToTriangleTactic(player1Moves, computerMoves);\n\n    counterMove === null &&\n      (counterMove = this.susceptibleToEncirclementTactic(player1Moves));\n\n    counterMove === null &&\n      (counterMove = this.susceptibleToArrowheadTactic(player1Moves));\n\n    return counterMove;\n  };\n\n  // check if susceptible to triangle tactic (center + corner)\n  // -> null if not, counter move if susceptible\n  susceptibleToTriangleTactic = (player1Moves, computerMoves) => {\n    let wherePlayer1Is = null;\n    let counterMove = null;\n    let onCorner = false;\n    let onCenter = player1Moves.some(move => move === 4);\n    if (onCenter) {\n      player1Moves\n        .filter(move => move !== 4)\n        .forEach(move => {\n          switch (move) {\n            case 0:\n              onCorner = 0;\n              break;\n            case 2:\n              onCorner = 2;\n              break;\n            case 6:\n              onCorner = 6;\n              break;\n            case 8:\n              onCorner = 8;\n              break;\n            default:\n              onCorner = false;\n              break;\n          }\n        });\n    }\n\n    onCenter && onCorner && (wherePlayer1Is = [4, onCorner]);\n\n    wherePlayer1Is !== null &&\n      (counterMove = this.selectRandomPlaceToPlay(\n        this.getFreeCorners(onCorner, computerMoves)\n      ));\n\n    return counterMove;\n  };\n\n  // check if susceptible to encirclement tactic (opposing corners)\n  // -> null if not, counter move if susceptible\n  susceptibleToEncirclementTactic = player1Moves => {\n    let counterMove = null;\n    let onCorners = player1Moves.every(move => move % 2 === 0 && move !== 4);\n    if (onCorners) {\n      counterMove = this.selectRandomPlaceToPlay([1, 3, 5, 7]);\n    }\n    return counterMove;\n  };\n\n  // check if susceptible to encirclement tactic (opposing corners)\n  // -> null if not, counter move if susceptible\n  susceptibleToArrowheadTactic = player1Moves => {\n    let counterMove = null;\n    let player1MovesSum = player1Moves[0] + player1Moves[1];\n    let onSides = player1Moves.every(move => move % 2 === 1);\n    if (onSides) {\n      switch (player1MovesSum) {\n        case 4:\n          counterMove = 0;\n          break;\n        case 6:\n          counterMove = 2;\n          break;\n        case 10:\n          counterMove = 6;\n          break;\n        case 12:\n          counterMove = 8;\n          break;\n        default:\n          break;\n      }\n    }\n    return counterMove;\n  };\n\n  // returns [] of open corners based on arguments provided (int, [])\n  getFreeCorners = (cornerPlayer1IsOn, computerMoves) => {\n    let possibleCorners = [0, 2, 6, 8];\n    let cornersLeft = possibleCorners.filter(\n      corner => corner !== cornerPlayer1IsOn\n    );\n    let cornersComputerIsOn = computerMoves.filter(\n      move => move % 2 === 0 && move !== 4\n    );\n    let openCorners = cornersLeft.filter(corner => {\n      let existingCorner;\n      cornersComputerIsOn.forEach(cornerTaken => {\n        if (corner !== cornerTaken) {\n          existingCorner = true;\n        }\n      });\n      return existingCorner;\n    });\n    return openCorners;\n  };\n\n  easyPlay = () => {\n    let win = this.checkIfCanWin();\n    if (win !== null) {\n      this.play(win);\n      this.setState((prevState, props) => ({\n        win: { someoneHasWon: true, whoHasWon: false },\n        computerWins: prevState.computerWins + 1\n      }));\n    } else {\n      this.playRandomSquare();\n    }\n  };\n\n  difficultPlay = () => {\n    let win = this.checkIfCanWin();\n    if (win !== null) {\n      this.play(win);\n      this.setState((prevState, props) => ({\n        win: { someoneHasWon: true, whoHasWon: false },\n        computerWins: prevState.computerWins + 1\n      }));\n    } else {\n      let block = this.checkRiskLosing();\n      if (block !== null) {\n        this.play(block);\n      } else {\n        this.playRandomSquare();\n      }\n    }\n  };\n\n  impossiblePlay = () => {\n    // Handle opening move\n    let moves = this.getMovesPlayed();\n    if (moves[0].length === 1) {\n      let firstMove = this.findFirstMove();\n      if (firstMove[1] !== 'center') {\n        this.play(4);\n      } else {\n        this.play(this.selectRandomPlaceToPlay([0, 2, 6, 8]));\n      }\n    } else if (moves[0].length === 2) {\n      // Win or Block\n      let win = this.checkIfCanWin();\n      if (win !== null) {\n        this.play(win);\n        this.setState((prevState, props) => ({\n          win: { someoneHasWon: true, whoHasWon: false },\n          computerWins: prevState.computerWins + 1\n        }));\n      } else {\n        let block = this.checkRiskLosing();\n        if (block !== null) {\n          this.play(block);\n        } else {\n          let counterMove = this.combatCommonTactics();\n          if (counterMove !== null) {\n            this.play(counterMove);\n          } else {\n            this.playRandomSquare();\n          }\n        }\n      }\n    } else {\n      this.difficultPlay();\n    }\n  };\n}\n\nexport default TicTacToe;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nimport baileyGillaspy from '../../images/BaileyGillaspyFigure5.jpg';\nimport birdBrain5x7 from '../../images/birdbrain_1024X768.jpg';\nimport birdBrain1 from '../../images/birdbrain.jpg';\nimport birdBrain2 from '../../images/birdbrain3.jpg';\nimport birdBrain3 from '../../images/birdbrain9.jpg';\nimport birdSkinner from '../../images/birdbrainSkinner.jpg';\nimport { theme } from '../../styles/theme/theme';\n\nconst Inspiration = () => {\n  const pictures = [\n    baileyGillaspy,\n    birdBrain5x7,\n    birdBrain1,\n    birdBrain2,\n    birdSkinner,\n    birdBrain3\n  ];\n  return (\n    <Paper style={{ width: '100%', height: '100%', paddingTop: 10 }}>\n      <Typography variant='h5' style={{ margin: 20 }}>\n        Growing up, my dad took me to all the fun places -the park, the zoo, and\n        the carnival. For almost every place he took me to, the most vivid of\n        memories involve a bird. At the park we always fed bread to the ducks.\n        We didn’t know it was bad for them back then. It was at one of our trips\n        to the zoo that I was attacked by a bird for the first time, a peacock.\n        It wouldn’t let me walk by. It let everyone else walk by, but not me. My\n        most fond memory of a bird is a memory from our trips to the carnival.\n        At the carnival, there was a chicken that could play tic-tac-toe! It was\n        no slouch either. If you made one bad move the chicken would beat you,\n        and no-one ever beat the chicken.\n      </Typography>\n      <br />\n      <Grid container justify='center'>\n        <Grid item>\n          <img\n            style={{ maxHeight: 450 }}\n            src={birdBrain2}\n            alt='SkinnerBailey&Marian'\n          />\n        </Grid>\n      </Grid>\n      <br />\n      <Typography variant='h5' style={{ margin: 20 }}>\n        Interested in animal training, I began studying the science of behavior\n        change. I learned about many creative applications of operant\n        conditioning and animal training. I learned about{' '}\n        <a\n          style={{ textDecoration: 'none' }}\n          href='https://en.wikipedia.org/wiki/Project_Pigeon'\n        >\n          <span style={{ color: theme.palette.secondary.main }}>\n            {' '}\n            Project Pelican\n          </span>\n        </a>\n        , the first smart bomb, where pigeons were used to peck at specific\n        areas on a map to guide a bomb. I learned about studies of chimpanzees\n        in space flight. I learned about cats, dogs, birds, and dolphins serving\n        as spies for the CIA. Then I learned about IQ Zoo where raccoons were\n        trained to play baseball, ducks to play the guitar, pigs to save money\n        in piggy banks, and chickens to walk a tightrope, dance to music, and\n        even to play baseball. In fact, I learned that the chicken I played\n        tic-tac-toe against, was only one of many ‘\n        <a\n          style={{ textDecoration: 'none' }}\n          href='https://www3.uca.edu/iqzoo/Exhibits/bird_brain.htm'\n        >\n          <span style={{ color: theme.palette.secondary.main }}>\n            {' '}\n            Bird Brains\n          </span>\n          .\n        </a>\n        ’\n      </Typography>\n      <br />\n      <Grid container justify='center'>\n        <Grid item>\n          <img style={{ maxHeight: 450 }} src={birdSkinner} alt='birdSkinner' />\n        </Grid>\n      </Grid>\n      <br />\n      <Typography variant='h5' style={{ margin: 20 }}>\n        The IQ Zoo was opened in 1955 by Marian and Keller Breland, who also\n        worked in Skinner’s lab on Project Pelican. In 1965, Robert ‘Bob’\n        Bailey, former Director of Training for the US Navy Marine Program,\n        joined IQ Zoo and worked with Marian on the tic-tac-toe playing chickens\n        and of the other amazing acts they had. After IQ Zoo, Bob began to share\n        his knowledge of animal training conducting ‘chicken camps’ that taught\n        learners about types of reinforcers, schedules of reinforcement,\n        shaping, chaining, and stimulus control. He later led the training\n        program for the canines that were used to lead Seal Team 6 in the\n        capture of Osama Bin Laden.\n      </Typography>\n      <br />\n      <Grid container justify='center'>\n        <Grid item>\n          <img src={birdBrain1} alt='birdBrainNoColor' />\n        </Grid>\n      </Grid>\n      <br />\n      <Typography variant='h5' style={{ margin: 20 }}>\n        In college, I joined a student organization, The Organization for\n        Reinforcement Contingencies with Animals (ORCA), that hosted a\n        conference that he was a speaker at every year. One year, I even got to\n        pick him up from the airport. It was a bit nostalgic since he was\n        responsible for one of my favorite memories with my dad. So I built this\n        to honor the memory of my father and the legacy of the the Marian\n        Breland Bailey, Keller Breland, and Bob Bailey.\n      </Typography>\n      <Typography variant='h4' style={{ margin: 20 }}>\n        For Interested Readers\n      </Typography>\n      <a\n        style={{ textDecoration: 'none' }}\n        href='https://www.ncbi.nlm.nih.gov/pmc/articles/PMC2755380/'\n      >\n        <Typography\n          variant='h6'\n          style={{ margin: 20, color: theme.palette.secondary.main }}\n        >\n          Operant psychology goes to the fair: Marian and Keller Breland in the\n          popular press, 1947-1966\n        </Typography>\n      </a>\n      <a\n        style={{ textDecoration: 'none' }}\n        href='https://www.smithsonianmag.com/history/the-cias-most-highly-trained-spies-werent-even-human-20149/'\n      >\n        <Typography\n          variant='h6'\n          style={{ margin: 20, color: theme.palette.secondary.main }}\n        >\n          The CIA’s Most Highly-Trained Spies Weren’t Even Human\n        </Typography>\n      </a>\n    </Paper>\n  );\n};\n\nexport default Inspiration;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Nav from './components/Nav/Nav';\nimport TicTacToe from './components/TicTacToeBoard/TicTacToe';\nimport Inspiration from './components/Inspiration/Inspiration';\nimport chicken from './images/chicken.png';\nimport { MuiThemeProvider } from '@material-ui/core';\nimport { theme } from './styles/theme/theme';\nimport { Route } from 'react-router-dom';\n\nclass App extends Component {\n  state = {};\n\n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <div\n          style={{\n            backgroundImage: `url(${chicken})`,\n            height: 'calc(100vh - 87px)',\n            backgroundPosition: 'center',\n            backgroundRepeat: 'no-repeat',\n            marginTop: '87px'\n          }}\n        >\n          <Nav />\n          <main>\n            <Route exact path='/' render={() => <TicTacToe />} />\n            <Route path='/inspiration' render={() => <Inspiration />} />\n          </main>\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/birdbrain.c7ec5257.jpg\";","module.exports = __webpack_public_path__ + \"static/media/birdbrain3.4b2884be.jpg\";","module.exports = __webpack_public_path__ + \"static/media/birdbrainSkinner.2aa44c05.jpg\";"],"sourceRoot":""}